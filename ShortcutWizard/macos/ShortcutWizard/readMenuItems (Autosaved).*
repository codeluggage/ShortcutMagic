use AppleScript version "2.4" -- Yosemite (10.10) or lateruse scripting additionsset proc to "Evernote"-- ->  Split up pyramid version--				-- if (menu item title is not "Apple") then--				set level1 to every menu bar item--				set level2 to every menu of every menu bar item--				set level3 to every menu item of every menu of every menu bar item--				set level4 to every menu of every menu item of every menu of every menu bar item--				set holdShortcuts to every menu item of every menu of every menu item of every menu of every menu bar item--				--				--     repeat with w in menu items of menu 1 of v--				--         set out to out & "  " & my getshortcut(proc, w) & "  " & name of w & linefeed--				--         try--				--             repeat with x in menu items of menu 1 of w--				--                 set out to out & "    " & my getshortcut(proc, x) & "  " & name of x & linefeed--				--             end repeat--				--         end try--				--     end repeat--				repeat with w in menu items of holdShortcuts--					set shortcuts to shortcuts & my getshortcut(proc, w)--					set holdShortcuts to {}--				end repeat-- <- end pyramid-- Hacky version -> split this up--set c to ""--try--	set n to value of attribute "AXMenuItemCmdModifiers" of x--	set modifier to item (n + 1) of cmdmods--	try--		set c to (value of attribute "AXMenuItemCmdChar" of x)--		c as text--		return modifier & c--	on error--		set glyph to (value of attribute "AXMenuItemCmdGlyph" of x) as text--		repeat with i from 1 to (count menuglyphs)--			if item i of menuglyphs is glyph then--				return modifier & item (i + 1) of menuglyphs--			end if--		end repeat--	end try--end try--return "-"-- <- end hacky version-- -> Good versiontell application "System Events"	tell application process proc		set liste to {}						tell menu 1 of menu bar item 7 of menu bar 1			set nbMenuItem to count every menu item			set holdMenuItem to menu item									repeat with i from 1 to nbMenuItem				set holdMenuItemChild to menu item i				set mName to get name of menu item i				try					mName				on error					set mName to missing value				end try				set mAttr to get value of attribute "AXMenuItemCmdChar" of menu item i				try					mAttr				on error					set mAttr to missing value				end try								if (mName is not missing value and mAttr is not missing value) then					set end of liste to {mName, mAttr}				end if			end repeat		end tell	end tell		return listeend tell